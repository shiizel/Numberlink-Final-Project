public class allPuzzles
{
  Block[][][] puzzles;
  public allPuzzles()
  {
    puzzles = new Block[6][][];
    
    puzzles[0] = new Block[7][7];
    for(int r = 0; r < 7; r++)
    {
      for(int c = 0; c < 7; c++)
      {
        puzzles[0][r][c] = new Block(r, c, new int[]{255, 255, 255}, false);
      }
    }
    puzzles[0][4][2] = new Block(4, 2, new int[]{255, 0, 0}, true);
    puzzles[0][2][5] = new Block(2, 5, new int[]{255, 0, 0}, true);
      
    puzzles[0][0][6] = new Block(0, 6, new int[]{0, 255, 0}, true);
    puzzles[0][4][1] = new Block(4, 1, new int[]{0, 255, 0}, true);
     
    puzzles[0][3][2] = new Block(3, 2, new int[]{0, 0, 255}, true);
    puzzles[0][1][1] = new Block(1, 1, new int[]{0, 0, 255}, true);
      
    puzzles[0][3][0] = new Block(3, 0, new int[]{255, 255, 0}, true);
    puzzles[0][4][6] = new Block(4, 6, new int[]{255, 255, 0}, true);
      
    puzzles[0][5][1] = new Block(5, 1, new int[]{0, 255, 255}, true);
    puzzles[0][3][3] = new Block(3, 3, new int[]{0, 255, 255}, true);
    
    puzzles[1] = new Block[7][7];
    for(int r = 0; r < 7; r++)
    {
      for(int c = 0; c < 7; c++)
      {
        puzzles[1][r][c] = new Block(r, c, new int[]{255, 255, 255}, false);
      }
    }
    puzzles[1][5][0] = new Block(5, 0, new int[]{255, 0, 0}, true);
    puzzles[1][6][3] = new Block(6, 3, new int[]{255, 0, 0}, true);
      
    puzzles[1][2][1] = new Block(2, 1, new int[]{0, 255, 0}, true);
    puzzles[1][3][4] = new Block(3, 4, new int[]{0, 255, 0}, true);
     
    puzzles[1][0][5] = new Block(0, 5, new int[]{0, 0, 255}, true);
    puzzles[1][6][4] = new Block(6, 4, new int[]{0, 0, 255}, true);
      
    puzzles[1][2][4] = new Block(2, 4, new int[]{255, 255, 0}, true);
    puzzles[1][5][4] = new Block(5, 4, new int[]{255, 255, 0}, true);
      
    puzzles[1][1][1] = new Block(1, 1, new int[]{0, 255, 255}, true);
    puzzles[1][2][2] = new Block(2, 2, new int[]{0, 255, 255}, true);
    
    puzzles[1][6][0] = new Block(6, 0, new int[]{255, 0, 255}, true);
    puzzles[1][6][2] = new Block(6, 2, new int[]{255, 0, 255}, true);
      
    puzzles[1][0][4] = new Block(0, 4, new int[]{150, 150, 150}, true);
    puzzles[1][5][5] = new Block(5, 5, new int[]{150, 150, 150}, true);
    
    puzzles[2] = new Block[5][5];
    for(int r = 0; r < 5; r++)
    {
      for(int c = 0; c < 5; c++)
      {
        puzzles[2][r][c] = new Block(r, c, new int[]{255, 255, 255}, false);
        
      }
    }
    puzzles[2][3][0] = new Block(3, 0, new int[]{255, 0, 0}, true);
    puzzles[2][2][4] = new Block(2, 4, new int[]{255, 0, 0}, true);
      
    puzzles[2][1][1] = new Block(1, 1, new int[]{0, 255, 0}, true);
    puzzles[2][4][4] = new Block(4, 4, new int[]{0, 255, 0}, true);
     
    puzzles[2][2][1] = new Block(2, 1, new int[]{0, 0, 255}, true);
    puzzles[2][4][3] = new Block(4, 3, new int[]{0, 0, 255}, true);
      
    puzzles[2][4][0] = new Block(4, 0, new int[]{255, 255, 0}, true);
    puzzles[2][3][1] = new Block(3, 1, new int[]{255, 255, 0}, true);
    
    puzzles[3] = new Block[4][4];
    for(int r = 0; r < 4; r++)
    {
      for(int c = 0; c < 4; c++)
      {
        puzzles[3][r][c] = new Block(r, c, new int[]{255, 255, 255}, false);
      }
    }
    // red
    puzzles[3][0][0] = new Block(0, 0, new int[]{255, 0, 0}, true);
    puzzles[3][3][3] = new Block(3, 3, new int[]{255, 0, 0}, true);
      
    // blue
    puzzles[3][0][1] = new Block(0, 1, new int[]{0, 0, 255}, true);
    puzzles[3][2][2] = new Block(2, 2, new int[]{0, 0, 255}, true);
      
    // green
    puzzles[3][1][2] = new Block(1, 2, new int[]{0, 255, 0}, true);
    puzzles[3][2][1] = new Block(2, 1, new int[]{0, 255, 0}, true);
    
    puzzles[4] = new Block[9][9];
    for(int r = 0; r < 9; r++)
    {
      for(int c = 0; c < 9; c++)
      {
        puzzles[4][r][c] = new Block(r, c, new int[]{255, 255, 255}, false);
      }
    }
    puzzles[4][0][0] = new Block(0, 0, new int[]{50, 0, 0}, true);
    puzzles[4][8][5] = new Block(8, 5, new int[]{50, 0, 0}, true);
      
    puzzles[4][0][1] = new Block(0, 1, new int[]{0, 50, 0}, true);
    puzzles[4][1][7] = new Block(1, 7, new int[]{0, 50, 0}, true);
    
    puzzles[4][0][2] = new Block(0, 2, new int[]{50, 50, 50}, true);
    puzzles[4][7][1] = new Block(7, 1, new int[]{50, 50, 50}, true);
      
    puzzles[4][7][2] = new Block(7, 2, new int[]{0, 0, 50}, true);
    puzzles[4][7][5] = new Block(7, 5, new int[]{0, 0, 50}, true);
    
    puzzles[4][0][3] = new Block(0, 3, new int[]{50, 50, 0}, true);
    puzzles[4][3][3] = new Block(3, 3, new int[]{50, 50, 0}, true);
      
    puzzles[4][3][4] = new Block(3, 4, new int[]{0, 50, 50}, true);
    puzzles[4][0][4] = new Block(0, 4, new int[]{0, 50, 50}, true);
     
    puzzles[4][2][7] = new Block(1, 2, new int[]{50, 0, 50}, true);
    puzzles[4][7][7] = new Block(2, 1, new int[]{50, 0, 50}, true);
    
    puzzles[5] = new Block[8][8];
    for(int r = 0; r < 8; r++)
    {
      for(int c = 0; c < 8; c++)
      {
        puzzles[5][r][c] = new Block(r, c, new int[]{255, 255, 255}, false);
      }
    }
    puzzles[5][4][0] = new Block(4, 0, new int[]{200, 0, 0}, true);
    puzzles[5][1][7] = new Block(1, 7, new int[]{200, 0, 0}, true);
      
    puzzles[5][4][1] = new Block(4, 1, new int[]{0, 200, 0}, true);
    puzzles[5][7][2] = new Block(7, 2, new int[]{0, 200, 0}, true);
    
    puzzles[5][4][2] = new Block(4, 2, new int[]{0, 0, 200}, true);
    puzzles[5][6][1] = new Block(6, 1, new int[]{0, 0, 200}, true);
      
    puzzles[5][4][3] = new Block(4, 3, new int[]{200, 200, 0}, true);
    puzzles[5][4][5] = new Block(4, 5, new int[]{200, 200, 0}, true);
    
    puzzles[5][4][4] = new Block(4, 4, new int[]{0, 200, 200}, true);
    puzzles[5][3][3] = new Block(3, 3, new int[]{0, 200, 200}, true);
      
    puzzles[5][5][2] = new Block(5, 2, new int[]{200, 0, 200}, true);
    puzzles[5][7][1] = new Block(7, 1, new int[]{200, 0, 200}, true);
    
    // NOT ABLE TO SOLVE in a reasonable amount of time yet
    /*
    puzzles[5] = new Block[10][10];
     for(int r = 0; r < 10; r++)
    {
      for(int c = 0; c < 10; c++)
      {
        puzzles[5][r][c] = new Block(r, c, new int[]{255, 255, 255}, false);
      }
    }
    puzzles[5][6][1] = new Block(6, 1, new int[]{100, 0, 0}, true);
    puzzles[5][8][2] = new Block(8, 2, new int[]{100, 0, 0}, true);
      
    puzzles[5][1][8] = new Block(1, 8, new int[]{0, 100, 0}, true);
    puzzles[5][3][5] = new Block(3, 5, new int[]{0, 100, 0}, true);
    
    puzzles[5][3][8] = new Block(3, 8, new int[]{0, 0, 100}, true);
    puzzles[5][5][9] = new Block(5, 9, new int[]{0, 0, 100}, true);
      
    puzzles[5][0][9] = new Block(0, 9, new int[]{100, 100, 0}, true);
    puzzles[5][1][7] = new Block(1, 7, new int[]{100, 100, 0}, true);
    
    puzzles[5][0][5] = new Block(0, 5, new int[]{0, 100, 100}, true);
    puzzles[5][6][7] = new Block(6, 7, new int[]{0, 100, 100}, true);
      
    puzzles[5][0][0] = new Block(0, 0, new int[]{100, 0, 100}, true);
    puzzles[5][9][0] = new Block(9, 0, new int[]{100, 0, 100}, true);
     
    puzzles[5][4][0] = new Block(4, 0, new int[]{100, 100, 100}, true);
    puzzles[5][1][2] = new Block(1, 2, new int[]{100, 100, 100}, true);
    
    puzzles[5][3][3] = new Block(3, 3, new int[]{200, 0, 0}, true);
    puzzles[5][6][6] = new Block(6, 6, new int[]{200, 0, 0}, true);
      
    puzzles[5][8][7] = new Block(8, 7, new int[]{0, 200, 0}, true);
    puzzles[5][8][1] = new Block(8, 1, new int[]{0, 200, 0}, true);
    
    puzzles[5][3][2] = new Block(3, 2, new int[]{0, 0, 200}, true);
    puzzles[5][7][3] = new Block(7, 3, new int[]{0, 0, 200}, true);
      
    puzzles[5][9][4] = new Block(9, 4, new int[]{200, 0, 200}, true);
    puzzles[5][6][4] = new Block(6, 4, new int[]{200, 0, 200}, true);
     
    puzzles[5][2][6] = new Block(2, 6, new int[]{200, 200, 200}, true);
    puzzles[5][9][9] = new Block(9, 9, new int[]{200, 200, 200}, true);
    
    puzzles[5] = new Block[11][11];
    for(int r = 0; r < 11; r++)
    {
      for(int c = 0; c < 11; c++)
      {
        puzzles[5][r][c] = new Block(r, c, new int[]{255, 255, 255}, false);
      }
    }
    puzzles[5][0][2] = new Block(0, 2, new int[]{100, 0, 0}, true);
    puzzles[5][2][3] = new Block(2, 3, new int[]{100, 0, 0}, true);
      
    puzzles[5][1][1] = new Block(1, 1, new int[]{0, 100, 0}, true);
    puzzles[5][0][3] = new Block(0, 3, new int[]{0, 100, 0}, true);
    
    puzzles[5][9][4] = new Block(9, 4, new int[]{0, 0, 100}, true);
    puzzles[5][0][10] = new Block(0, 10, new int[]{0, 0, 100}, true);
      
    puzzles[5][5][7] = new Block(5, 7, new int[]{100, 100, 0}, true);
    puzzles[5][6][8] = new Block(6, 8, new int[]{100, 100, 0}, true);
    
    puzzles[5][8][2] = new Block(8, 2, new int[]{0, 100, 100}, true);
    puzzles[5][3][3] = new Block(3, 3, new int[]{0, 100, 100}, true);
      
    puzzles[5][10][7] = new Block(10, 7, new int[]{100, 0, 100}, true);
    puzzles[5][5][8] = new Block(5, 8, new int[]{100, 0, 100}, true);
     
    puzzles[5][3][0] = new Block(3, 0, new int[]{100, 100, 100}, true);
    puzzles[5][3][9] = new Block(3, 9, new int[]{100, 100, 100}, true);
    
    puzzles[5][3][1] = new Block(3, 1, new int[]{200, 0, 0}, true);
    puzzles[5][4][3] = new Block(4, 3, new int[]{200, 0, 0}, true);
      
    puzzles[5][8][7] = new Block(8, 7, new int[]{0, 200, 0}, true);
    puzzles[5][2][5] = new Block(2, 5, new int[]{0, 200, 0}, true);
    
    puzzles[5][9][9] = new Block(9, 9, new int[]{0, 0, 200}, true);
    puzzles[5][8][8] = new Block(8, 8, new int[]{0, 0, 200}, true);
      
    puzzles[5][1][5] = new Block(1, 5, new int[]{200, 0, 200}, true);
    puzzles[5][1][10] = new Block(1, 10, new int[]{200, 0, 200}, true);
     
    puzzles[5][9][7] = new Block(9, 7, new int[]{200, 200, 200}, true);
    puzzles[5][5][10] = new Block(5, 10, new int[]{200, 200, 200}, true);
    */
  }
  
  public Block[][] puzzle(int i)
  {
    return puzzles[i];
  }
}
